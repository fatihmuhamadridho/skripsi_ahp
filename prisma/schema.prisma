// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id      Int      @id @default(autoincrement())
  fullname     String?
  username     String   @unique
  password     String
  access_token String?
  first_login  Boolean? @default(true)
}

model Karyawan {
  karyawan_id Int          @id @default(autoincrement())
  fullname    String
  gender      Gender
  birth_place String?
  birth_date  DateTime?
  handphone   String
  address     String?
  department  String?
  Alternatif  Alternatif[]
}

model Kriteria {
  kriteria_id     Int               @id @default(autoincrement())
  name            String            @unique
  Subkriteria     Subkriteria[]
  BobotKriteria   BobotKriteria[]
  BobotAlternatif BobotAlternatif[]
}

model Subkriteria {
  subkriteria_id      Int                @id @default(autoincrement())
  name                String
  BobotSubkriteria    BobotSubkriteria[]
  BobotAlternatif     BobotAlternatif[]
  Kriteria            Kriteria?          @relation(fields: [kriteriaKriteria_id], references: [kriteria_id])
  kriteriaKriteria_id Int?
}

model CategoryKriteria {
  category_kriteria_id Int                @id @default(autoincrement())
  name                 String?
  periode              DateTime
  Alternatif           Alternatif[]
  BobotKriteria        BobotKriteria[]
  BobotSubkriteria     BobotSubkriteria[]
}

model Alternatif {
  alternatif_id                        Int               @id @default(autoincrement())
  total                                Int
  BobotAlternatif                      BobotAlternatif[]
  Karyawan                             Karyawan?         @relation(fields: [karyawanKaryawan_id], references: [karyawan_id])
  karyawanKaryawan_id                  Int?
  CategoryKriteria                     CategoryKriteria? @relation(fields: [categoryKriteriaCategory_kriteria_id], references: [category_kriteria_id])
  categoryKriteriaCategory_kriteria_id Int?
}

model BobotKriteria {
  bobot_kriteria_id                    Int               @id @default(autoincrement())
  value                                Int
  Kriteria                             Kriteria?         @relation(fields: [kriteriaKriteria_id], references: [kriteria_id])
  kriteriaKriteria_id                  Int?
  CategoryKriteria                     CategoryKriteria? @relation(fields: [categoryKriteriaCategory_kriteria_id], references: [category_kriteria_id])
  categoryKriteriaCategory_kriteria_id Int?
}

model BobotSubkriteria {
  bobot_subkriteria_id                 Int               @id @default(autoincrement())
  value                                Int
  Subkriteria                          Subkriteria?      @relation(fields: [subkriteriaSubkriteria_id], references: [subkriteria_id])
  subkriteriaSubkriteria_id            Int?
  CategoryKriteria                     CategoryKriteria? @relation(fields: [categoryKriteriaCategory_kriteria_id], references: [category_kriteria_id])
  categoryKriteriaCategory_kriteria_id Int?
}

model BobotAlternatif {
  bobot_alternatif_id       Int          @id @default(autoincrement())
  value                     Int
  Kriteria                  Kriteria?    @relation(fields: [kriteriaKriteria_id], references: [kriteria_id])
  kriteriaKriteria_id       Int?
  Subkriteria               Subkriteria? @relation(fields: [subkriteriaSubkriteria_id], references: [subkriteria_id])
  subkriteriaSubkriteria_id Int?
  Alternatif                Alternatif?  @relation(fields: [alternatifAlternatif_id], references: [alternatif_id])
  alternatifAlternatif_id   Int?
}

enum Gender {
  Pria
  Wanita
}
